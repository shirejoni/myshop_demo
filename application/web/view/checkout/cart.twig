{% extends "checkout/_temp/blank_checkout_temp.twig" %}

{% block CheckoutBody %}
    <div class="big-shopping-cart-box">
        {% if Products %}
            <table border="1" class="big-shopping-cart-table" id="big-shopping-cart-table">
                <thead>
                <tr>
                    <th>عکس</th>
                    <th>نام محصول</th>
                    <th>تعداد</th>
                    <th>فی</th>
                    <th>قیمت کل</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                {% for Product in Products %}
                    <tr>
                        <td>
                            <img src="{{ Product['image'] }}">
                        </td>
                        <td>
                            {{ Product['name'] }}
                        </td>
                        <td>
                            <input type="number" disabled class="quantity" value="{{ Product['quantity'] }}">
                        </td>
                        <td>
                            {{ Product['total_price_for_unit_formatted'] }} <span class="toman">تومان</span>
                        </td>
                        <td>
                            {{ Product['total_formatted'] }} <span class="toman">تومان</span>
                        </td>
                        <td>
                            <span onclick="deleteRowCart({{ Product['cart_id'] }})"><i class="fa fa-times"></i></span>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        {% else %}
            سبد شما خالی است
        {% endif %}

        <div class="off-code">
            <lable>کد تخفیف دارید؟</lable>
            <input type="text" id="off-code-value" placeholder="کد تخفیف">
            <button id="off-code-btn">اعمال</button>
        </div>
    </div>
{% endblock %}

{% block Js %}
    {% autoescape false %}
        <script type="text/javascript">
            let loginUrl = "{{ URL }}/login/index";
            function refreshBigBasketCart() {
                $.post(cartInfo, {'post' : true, 'cart-post' : true}, function (response) {
                    response = JSON.parse(response);
                    if(response.status == 1) {
                        $("#big-shopping-cart-table").html('');
                        for(i = 0; i < response['data']['Products'].length; i++) {
                            let product = response['data']['Products'][i];
                            let cartItemRow = $('<tr>');
                            let cartItemRowImage = $("<td>");
                            cartItemRowImage.html($('<img>').attr('src', product['image']));
                            cartItemRowImage.appendTo(cartItemRow);
                            $('<td>').text(product['name']).appendTo(cartItemRow);
                            $('<td>').html('<input type="number" class="quantity" disabled value="'+ product['quantity'] +'">').appendTo(cartItemRow);
                            $('<td>').html(product['total_price_for_unit_formatted'] + ' <span class="toman">تومان</span>').appendTo(cartItemRow);
                            $('<td>').html(product['total_formatted'] + ' <span class="toman">تومان</span>').appendTo(cartItemRow);
                            let cartItemRowRemove = $('<td>');
                            let cartITemRowRemoveIcon = $('<span onclick="deleteRowCart(\''+ product['cart_id'] +'\')"><i class="fa fa-times"></i></span>');
                            cartITemRowRemoveIcon.appendTo(cartItemRowRemove);
                            cartItemRowRemove.appendTo(cartItemRow);
                            $("#big-shopping-cart-table").append(cartItemRow);
                        }
                    }
                });
            }
            function deleteRowCart(cart_id) {
                $.post(removeFromCartUrl, {"post" : true, 'cart-post' : true, 'cart-id' : cart_id}, function (response) {
                    response = JSON.parse(response);
                    if(response.status == 1) {
                        refreshBigBasketCart();
                        refreshBasketCart();
                    }
                });
            }
            $(document).ready(function () {
                let successMessageBoxElement = $("#success-message-box");
                let errorMessageBoxElement = $("#error-message-box");
                $('#login-btn').click(function (e) {
                    let data = {};
                    let messages = [];
                    let error = false;
                    let element = $("#login-email");

                    successMessageBoxElement.find(".messages").html('');
                    successMessageBoxElement.css("display", "none");

                    errorMessageBoxElement.find(".messages").html('');
                    errorMessageBoxElement.css("display", "none");

                    if(element.val() != "") {
                        data['email'] = element.val();
                    }else {
                        error = true;
                        messages.push("{{ Translate['error_email_invalid'] }}");
                    }
                    element = $("#login-password");

                    if(element.val() != "") {
                        data['password'] = element.val();
                    }else {
                        error = true;
                        messages.push("{{ Translate['error_password_invalid'] }}");
                    }

                    data['post'] = true;
                    data['login-post'] = true;
                    data['checkout-post'] = true;
                    if(!error) {
                        $.post(loginUrl, data, function (response) {
                            response = JSON.parse(response);
                            if(response.status === 1) {
                                for (let i = 0; i < response['messages'].length; i++) {
                                    $('<p>').text(response['messages'][i]).appendTo(successMessageBoxElement.find('.messages'));
                                }
                                if(response['messages'].length > 0) {
                                    successMessageBoxElement.css("display", "block");
                                }

                                if(response['redirect']) {
                                    window.setTimeout(function () {
                                        window.location.href = response['redirect'];
                                    }, 1000)
                                }
                            }else {
                                for (let i = 0; i < response['messages'].length; i++) {
                                    $('<p>').text(response['messages'][i]).appendTo(errorMessageBoxElement.find('.messages'));
                                }
                                if(response['messages'].length > 0) {
                                    errorMessageBoxElement.css("display", "block");
                                }
                            }
                        });
                    }else {
                        for (let i = 0; i < messages.length; i++) {
                            $('<p>').text(messages[i]).appendTo(errorMessageBoxElement.find('.messages'));
                        }
                        if(messages.length > 0) {
                            errorMessageBoxElement.css("display", "block");
                        }
                    }
                    e.preventDefault();
                });




            });



        </script>
    {% endautoescape %}
{% endblock %}